# Name of your application. Used to uniquely configure containers.
service: fiest_up

# Name of the container image.
image: hugo0706/fiest_up

# Deploy to these servers.
servers:
  web:
    hosts:
      - 139.59.137.241
    labels:
      traefik.http.routers.example_app_secure.entrypoints: websecure
      traefik.http.routers.example_app_secure.rule: Host(`fiestup.com`)
      traefik.http.routers.example_app_secure.tls: true
    options:
          network: "private"
  jobs:
    hosts:
      - 139.59.137.241
    cmd: bin/jobs
    options:
         network: "private"
volumes:
  - "fiest_up_data:/data"

traefik:
  options:
    publish:
      - "443:443"
    network: "private"
  args:
    entryPoints.websecure.address: ":443"
  
      
# Credentials for your image host.
registry:
  username: hugo0706
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    POSTGRES_HOST: fiest_up-db
    POSTGRES_USER: postgres
    REDIS_URL: "redis://fiest_up-redis:6379/0"
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - SPOTIFY_CLIENT_ID
    - SPOTIFY_CLIENT_SECRET
    - SPOTIFY_REDIRECT_URI
    - RAILS_ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY
    - RAILS_ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY
    - RAILS_ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT
    - REDIS_URL

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:16.1
    host: 139.59.137.241
    env:
      clear:
        POSTGRES_USER: postgres
      secret:
        - POSTGRES_PASSWORD
    directories:
      - postgres_data:/var/lib/postgresql/data
    options:
          network: "private"
  redis:
    image: redis:7.0
    host: 139.59.137.241
    directories:
      - redis_data:/var/lib/redis/data
    options:
          network: "private"

# Configure custom arguments for Traefik. Be sure to reboot traefik when you modify it.
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
#
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
